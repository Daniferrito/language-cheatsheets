{"version":3,"sources":["contents/typescript/types/numeric.md","contents/typescript/types/classes.md","contents/javascript/types/numeric.md","contents/javascript/types/classes.md","components/CodeBlock.tsx","components/Section.tsx","components/Column.tsx","components/ColumnCoordinator.tsx","contents/LanguageDefs.ts","contents/typescript/Typescript.ts","contents/javascript/Javascript.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","CodeBlock","props","language","value","style","codeStyle","Section","useState","markdown","setMarkdown","ref","createRef","useEffect","current","setHeight","clientHeight","fetch","section","then","response","text","minHeight","source","renderers","code","Column","contents","types","numeric","classes","Typography","variant","name","title","map","sectionFile","i","key","sectionIndex","height","sectionHeights","setSectionHeights","useStyles","makeStyles","root","display","element","flex","margin","ColumnCoordinator","languages","className","require","theme","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","appBarShiftRight","marginRight","flexGrow","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","drawerHeaderRight","content","contentShift","contentShiftRight","sections","createMuiTheme","palette","type","allLanguagesDisabled","definedLanguages","reduce","acc","lang","App","open","setOpen","rightOpen","setRightOpen","setLanguages","setSectionClick","event","console","log","handleLanguageChange","checked","ThemeProvider","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","noWrap","Drawer","anchor","paper","direction","Divider","List","index","ListItem","button","ListItemText","primary","filter","FormControl","component","FormLabel","FormGroup","Object","entries","state","FormControlLabel","control","Checkbox","onChange","label","FormHelperText","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.faa35277.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/numeric.d2e4b433.md\";","module.exports = __webpack_public_path__ + \"static/media/classes.ce4dee60.md\";","module.exports = __webpack_public_path__ + \"static/media/numeric.74961602.md\";","module.exports = __webpack_public_path__ + \"static/media/classes.bcc2a9c0.md\";","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vs as codeStyle } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\ninterface CodeBlockProps {\n    value: string;\n    language?: string;\n}\n\nfunction CodeBlock(props: CodeBlockProps) {\n    const { language, value } = props;\n\n    return (\n        <SyntaxHighlighter language={language} style={codeStyle}>\n          {value}\n        </SyntaxHighlighter>\n      );\n}\n\nexport default CodeBlock;","import React, { useEffect, createRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"./CodeBlock\";\n\ninterface SectionProps {\n  section: string;\n  setHeight: (height: number) => void;\n  minHeight: number;\n}\n\nfunction Section(props: SectionProps) {\n  const [markdown, setMarkdown] = useState(\"\");\n  const ref = createRef<HTMLDivElement>();\n  useEffect(() => {\n    if (ref.current !== null) {\n      props.setHeight(ref.current.clientHeight);\n    }\n  }, [props, ref]);\n\n  useEffect(() => {\n    fetch(props.section)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        setMarkdown(text);\n      });\n  });\n\n  return (\n    <div ref={ref} style={{minHeight: props.minHeight}}>\n      <ReactMarkdown source={markdown} renderers={{ code: CodeBlock }}/>\n    </div>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport { Language } from \"../contents/LanguageDefs\";\nimport Section from \"./Section\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface ColumnProps {\n  language: Language;\n  sectionHeights: number[]\n  setSectionHeights: React.Dispatch<React.SetStateAction<number[]>>\n}\n\nfunction Column(props: ColumnProps) {\n  const contents = [\n    props.language.types.numeric,\n    props.language.types.classes,\n    props.language.types.numeric\n  ];\n\n  //const [sectionHeights, setSectionHeights] = useState(contents.map(() => 0));\n\n  const setSectionHeight = (sectionIndex: number) => (height: number) => {\n    if(props.sectionHeights[sectionIndex] < height){\n        const sectionHeights = [...props.sectionHeights]\n        sectionHeights[sectionIndex] = height;\n        props.setSectionHeights(sectionHeights);\n    }else{\n    }\n  };\n\n  return (\n    <div>\n    <Typography variant=\"h1\">{props.language.name}</Typography>\n      <Typography variant=\"h3\">{props.language.types.title}</Typography>\n      {contents.map((sectionFile, i) => (\n        <Section\n          key={i}\n          section={sectionFile}\n          setHeight={setSectionHeight(i)}\n          minHeight={props.sectionHeights[i]}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Column;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Column from \"./Column\";\nimport { Language } from \"../contents/LanguageDefs\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\"\n  },\n  element: {\n    flex: 1,\n    margin: 10\n  }\n});\n\ninterface ColumnCoordinatorProps {\n  languages: Language[];\n}\n\nfunction ColumnCoordinator(props: ColumnCoordinatorProps) {\n  const classes = useStyles();\n\n  const languages = props.languages;\n  const [sectionHeights, setSectionHeights] = useState([0, 0, 0]);\n\n  useEffect(()=>{\n    setSectionHeights([0,0,0])\n  }, [props.languages])\n\n  return (\n    <div className={classes.root}>\n      {languages.map((language, i) => (\n        <div key={i} className={classes.element}>\n          <Column\n            language={language}\n            sectionHeights={sectionHeights}\n            setSectionHeights={setSectionHeights}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ColumnCoordinator;\n","import Typescript from \"./typescript/Typescript\";\nimport Javascript from \"./javascript/Javascript\";\nimport Section from \"../components/Section\";\n\nexport interface Language {\n    name: string\n    types: TypeSection\n}\n\nexport interface Section {\n    title: string\n    [subsection: string]: string\n}\n\nexport interface TypeSection extends Section {\n    numeric: string,\n    classes: string,\n}\n\nconst languages: Language[] = [Typescript, Javascript];\n\nexport default languages;","import { Language } from \"../LanguageDefs\";\n\nconst Typescript: Language = {\n    name: \"Typescript\",\n    types: {\n        title: \"Types\",\n        numeric: require(\"./types/numeric.md\"),\n        classes: require(\"./types/classes.md\"),\n    }\n}\n\nexport default Typescript","import { Language } from \"../LanguageDefs\";\n\nconst Javascript: Language = {\n    name: \"Javascript\",\n    types: {\n        title: \"Types\",\n        numeric: require(\"./types/numeric.md\"),\n        classes: require(\"./types/classes.md\"),\n    }\n}\n\nexport default Javascript","import React, { useState, FunctionComponent } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ColumnCoordinator from \"./components/ColumnCoordinator\";\n\nimport definedLanguages, { Language } from \"./contents/LanguageDefs\";\nimport {\n  CssBaseline,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  FormHelperText\n} from \"@material-ui/core\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  appBarShiftRight: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  title: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  drawerHeaderRight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth,\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  contentShiftRight: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  }\n}));\n\n//const allLanguages = [\"Java\", \"JavaScript\"];\nconst sections = [\"introduction\", \"helloworld\", \"constants\"];\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\ninterface LanguagesMap {\n  [language: string]: boolean;\n}\nconst allLanguagesDisabled: LanguagesMap = definedLanguages.reduce(\n  (acc, lang) => ({ ...acc, [lang.name]: false }),\n  {}\n);\n\nconst App: FunctionComponent = props => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [rightOpen, setRightOpen] = useState(false);\n\n  const [languages, setLanguages] = useState({...allLanguagesDisabled, [definedLanguages[0].name]: true});\n  const [section, setSection] = useState(sections[0]);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleRightDrawerOpen = () => {\n    setRightOpen(true);\n  };\n\n  const handleRightDrawerClose = () => {\n    setRightOpen(false);\n  };\n\n  const setSectionClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n    console.log(\"section\", event);\n  };\n\n  const handleLanguageChange = (language: string) => (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => {\n    console.log(event, checked, language);\n    setLanguages({ ...languages, [language]: checked });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n            [classes.appBarShiftRight]: rightOpen\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap className={classes.title}>\n              Title\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open right drawer\"\n              edge=\"end\"\n              onClick={handleRightDrawerOpen}\n              className={clsx(rightOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {sections.map((text, index) => (\n              <ListItem button key={text} onClick={setSectionClick}>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n            [classes.contentShiftRight]: rightOpen\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <ColumnCoordinator\n            languages={definedLanguages.filter(\n              language => languages[language.name]\n            )}\n          />\n        </main>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={rightOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeaderRight}>\n            <IconButton onClick={handleRightDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Choose a language</FormLabel>\n            <FormGroup>\n              {Object.entries(languages).map(([language, state]) => (\n                <FormControlLabel\n                  key={language}\n                  control={\n                    <Checkbox\n                      onChange={handleLanguageChange(language)}\n                      value={language}\n                      checked={state}\n                    />\n                  }\n                  label={language}\n                />\n              ))}\n            </FormGroup>\n            <FormHelperText>Bottom</FormHelperText>\n          </FormControl>\n        </Drawer>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}