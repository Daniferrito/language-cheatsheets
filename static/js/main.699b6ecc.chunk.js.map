{"version":3,"sources":["contents/typescript/types/numeric.md","contents/typescript/types/classes.md","contents/javascript/types/numeric.md","contents/javascript/types/classes.md","components/CodeBlock.tsx","components/Section.tsx","components/Column.tsx","components/ColumnCoordinator.tsx","contents/LanguageDefs.ts","contents/typescript/Typescript.ts","contents/javascript/Javascript.ts","styles/themes/LightTheme.ts","styles/themes/DarkTheme.ts","styles/codeThemes.ts","components/SettingsDialog.tsx","redux/settings/actions.ts","redux/settings/types.ts","App.tsx","serviceWorker.ts","redux/settings/reducers.ts","redux/RootReducer.ts","index.tsx"],"names":["module","exports","CodeBlock","props","language","value","codeStyle","useSelector","state","settings","codeTheme","style","Section","useState","markdown","setMarkdown","ref","createRef","useEffect","current","setHeight","clientHeight","fetch","section","then","response","text","minHeight","source","renderers","code","Column","contents","types","numeric","classes","Typography","variant","name","title","map","sectionFile","i","key","sectionIndex","height","sectionHeights","setSectionHeights","useStyles","makeStyles","root","display","element","flex","margin","ColumnCoordinator","languages","className","require","LightTheme","createMuiTheme","palette","type","DarkTheme","availableCodeThemes","coy","dark","funky","okaidia","solarizedlight","tomorrow","twilight","prism","atomDark","base16AteliersulphurpoolLight","cb","darcula","duotoneDark","duotoneEarth","duotoneForest","duotoneLight","duotoneSea","duotoneSpace","ghcolors","hopscotch","pojoaque","vs","xonokai","availableThemes","Light","Dark","SettingsDialog","onClose","open","dispatch","useDispatch","Dialog","aria-labelledby","DialogTitle","id","List","ListItem","FormControl","InputLabel","Select","labelId","Object","entries","find","visualTheme","onChange","event","theme","target","MenuItem","console","log","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","appBarShiftRight","marginRight","flexGrow","menuButton","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","drawerHeaderRight","content","contentShift","contentShiftRight","sections","allLanguagesDisabled","definedLanguages","reduce","acc","lang","App","leftOpen","setLeftOpen","rightOpen","setRightOpen","settingsOpen","setSettingsOpen","setLanguages","setSectionClick","handleLanguageChange","checked","ThemeProvider","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","noWrap","Drawer","anchor","paper","direction","Divider","index","button","ListItemText","primary","filter","component","FormLabel","FormGroup","FormControlLabel","control","Checkbox","label","FormHelperText","Boolean","window","location","hostname","match","initialState","RootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.699b6ecc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/numeric.d2e4b433.md\";","module.exports = __webpack_public_path__ + \"static/media/classes.a9944a36.md\";","module.exports = __webpack_public_path__ + \"static/media/numeric.74961602.md\";","module.exports = __webpack_public_path__ + \"static/media/classes.bcc2a9c0.md\";","import React from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../redux/RootReducer\";\n\ninterface CodeBlockProps {\n    value: string;\n    language?: string;\n}\n\nfunction CodeBlock(props: CodeBlockProps) {\n    const { language, value } = props;\n\n    const codeStyle = useSelector((state: RootState) => state.settings.codeTheme);\n\n    return (\n        <SyntaxHighlighter language={language} style={codeStyle}>\n          {value}\n        </SyntaxHighlighter>\n      );\n}\n\nexport default CodeBlock;","import React, { useEffect, createRef, useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport CodeBlock from \"./CodeBlock\";\n\ninterface SectionProps {\n  section: string;\n  setHeight: (height: number) => void;\n  minHeight: number;\n}\n\nfunction Section(props: SectionProps) {\n  const [markdown, setMarkdown] = useState(\"\");\n  const ref = createRef<HTMLDivElement>();\n  useEffect(() => {\n    if (ref.current !== null) {\n      props.setHeight(ref.current.clientHeight);\n    }\n  }, [props, ref]);\n\n  useEffect(() => {\n    fetch(props.section)\n      .then(response => {\n        return response.text();\n      })\n      .then(text => {\n        setMarkdown(text);\n      });\n  });\n\n  return (\n    <div ref={ref} style={{minHeight: props.minHeight}}>\n      <ReactMarkdown source={markdown} renderers={{ code: CodeBlock }}/>\n    </div>\n  );\n}\n\nexport default Section;\n","import React from \"react\";\nimport { Language } from \"../contents/LanguageDefs\";\nimport Section from \"./Section\";\nimport { Typography } from \"@material-ui/core\";\n\ninterface ColumnProps {\n  language: Language;\n  sectionHeights: number[]\n  setSectionHeights: React.Dispatch<React.SetStateAction<number[]>>\n}\n\nfunction Column(props: ColumnProps) {\n  const contents = [\n    props.language.types.numeric,\n    props.language.types.classes,\n  ];\n\n  //const [sectionHeights, setSectionHeights] = useState(contents.map(() => 0));\n\n  const setSectionHeight = (sectionIndex: number) => (height: number) => {\n    if(props.sectionHeights[sectionIndex] < height){\n        const sectionHeights = [...props.sectionHeights]\n        sectionHeights[sectionIndex] = height;\n        props.setSectionHeights(sectionHeights);\n    }else{\n    }\n  };\n\n  return (\n    <div>\n    <Typography variant=\"h1\">{props.language.name}</Typography>\n      <Typography variant=\"h3\">{props.language.types.title}</Typography>\n      {contents.map((sectionFile, i) => (\n        <Section\n          key={i}\n          section={sectionFile}\n          setHeight={setSectionHeight(i)}\n          minHeight={props.sectionHeights[i]}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Column;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Column from \"./Column\";\nimport { Language } from \"../contents/LanguageDefs\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\"\n  },\n  element: {\n    flex: 1,\n    margin: 10\n  }\n});\n\ninterface ColumnCoordinatorProps {\n  languages: Language[];\n}\n\nfunction ColumnCoordinator(props: ColumnCoordinatorProps) {\n  const classes = useStyles();\n\n  const languages = props.languages;\n  const [sectionHeights, setSectionHeights] = useState([0, 0, 0]);\n\n  useEffect(()=>{\n    setSectionHeights([0,0,0])\n  }, [props.languages])\n\n  return (\n    <div className={classes.root}>\n      {languages.map((language, i) => (\n        <div key={i} className={classes.element}>\n          <Column\n            language={language}\n            sectionHeights={sectionHeights}\n            setSectionHeights={setSectionHeights}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ColumnCoordinator;\n","import Typescript from \"./typescript/Typescript\";\nimport Javascript from \"./javascript/Javascript\";\nimport Section from \"../components/Section\";\n\nexport interface Language {\n    name: string\n    types: TypeSection\n}\n\nexport interface Section {\n    title: string\n    [subsection: string]: string\n}\n\nexport interface TypeSection extends Section {\n    numeric: string,\n    classes: string,\n}\n\nconst languages: Language[] = [Typescript, Javascript];\n\nexport default languages;","import { Language } from \"../LanguageDefs\";\n\nconst Typescript: Language = {\n    name: \"Typescript\",\n    types: {\n        title: \"Types\",\n        numeric: require(\"./types/numeric.md\"),\n        classes: require(\"./types/classes.md\"),\n    }\n}\n\nexport default Typescript","import { Language } from \"../LanguageDefs\";\n\nconst Javascript: Language = {\n    name: \"Javascript\",\n    types: {\n        title: \"Types\",\n        numeric: require(\"./types/numeric.md\"),\n        classes: require(\"./types/classes.md\"),\n    }\n}\n\nexport default Javascript","import { createMuiTheme } from \"@material-ui/core\";\n\nconst LightTheme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n});\n\nexport default LightTheme;","import { createMuiTheme } from \"@material-ui/core\";\n\nconst DarkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nexport default DarkTheme;","import { coy, dark, funky, okaidia, solarizedlight, tomorrow, twilight, prism, atomDark, base16AteliersulphurpoolLight, cb, darcula, duotoneDark, duotoneEarth, duotoneForest, duotoneLight, duotoneSea, duotoneSpace, ghcolors, hopscotch, pojoaque, vs, xonokai } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst availableCodeThemes: { [key: string]: any } = {\n    \"Coy\": coy,\n    \"Dark\": dark,\n    \"Funky\": funky,\n    \"Okaidia\": okaidia,\n    \"Solarized Light\": solarizedlight,\n    \"Tomorrow\": tomorrow,\n    \"Twilight\": twilight,\n    \"Prism\": prism,\n    \"Atom Dark\": atomDark,\n    \"Base16AteliersulphurpoolLight\": base16AteliersulphurpoolLight,\n    \"Cb\": cb,\n    \"Darcula\": darcula,\n    \"Duotone Dark\": duotoneDark,\n    \"Duotone Earth\": duotoneEarth,\n    \"Duotone Forest\": duotoneForest,\n    \"Duotone Light\": duotoneLight,\n    \"Duotone Sea\": duotoneSea,\n    \"Duotone Space\": duotoneSpace,\n    \"Gh Colors\": ghcolors,\n    \"Hopscotch\": hopscotch,\n    \"Pojoaque\": pojoaque,\n    \"Vs\": vs,\n    \"Xonokai\": xonokai,\n};\n\nexport default availableCodeThemes;","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  List,\n  ListItem,\n  Theme,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../redux/RootReducer\";\nimport LightTheme from \"../styles/themes/LightTheme\";\nimport DarkTheme from \"../styles/themes/DarkTheme\";\nimport { setVisualTheme, setCodeTheme } from \"../redux/settings/actions\";\nimport availableCodeThemes from \"../styles/codeThemes\";\n\nconst availableThemes: { [key: string]: Theme } = {\n  Light: LightTheme,\n  Dark: DarkTheme\n};\n\nexport interface SimpleDialogProps {\n  open: boolean;\n  onClose: () => void;\n}\n\nfunction SettingsDialog(props: SimpleDialogProps) {\n  const { onClose, open } = props;\n\n  const settings = useSelector((state: RootState) => state.settings);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const handleThemeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    dispatch(setVisualTheme(availableThemes[event.target.value as string]));\n  };\n\n  const handleCodeThemeChange = (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n      console.log(event.target.value as string)\n      console.log(availableCodeThemes[event.target.value as string])\n    dispatch(setCodeTheme(availableCodeThemes[event.target.value as string]));\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Settings</DialogTitle>\n      <List>\n        <ListItem>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={\n                Object.entries(availableThemes).find(\n                  ([key, value]) => value === settings.visualTheme\n                )?.[0]\n              }\n              onChange={handleThemeChange}\n            >\n              {Object.entries(availableThemes).map(([key, value]) => (\n                <MenuItem key={key} value={key}>\n                  {key}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n        <ListItem>\n          <FormControl>\n            <InputLabel id=\"demo-simple-select-label\">Theme</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={\n                Object.entries(availableCodeThemes).find(\n                  ([, value]) => value === settings.codeTheme\n                )?.[0]\n              }\n              onChange={handleCodeThemeChange}\n            >\n              {Object.entries(availableCodeThemes).map(([key]) => (\n                <MenuItem key={key} value={key}>\n                  {key}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nexport default SettingsDialog;\n","import { Theme } from \"@material-ui/core\";\n\nimport { SettingsActionTypes, SET_VISUAL_THEME, SET_CODE_THEME } from \"./types\";\n\nexport function setVisualTheme(theme: Theme): SettingsActionTypes {\n    return {\n        type: SET_VISUAL_THEME,\n        theme\n    }\n}\n\nexport function setCodeTheme(theme: any): SettingsActionTypes {\n    return {\n        type: SET_CODE_THEME,\n        theme\n    }\n}","import { Theme } from \"@material-ui/core\"\n\nexport const SET_VISUAL_THEME = 'SET_VISUAL_THEME'\nexport const SET_CODE_THEME = 'SET_CODE_THEME'\n\nexport interface SettingsState {\n    visualTheme: Theme,\n    codeTheme: any\n}\n\ninterface SetVisualTheme {\n    type: typeof SET_VISUAL_THEME\n    theme: Theme\n}\ninterface SetCodeTheme {\n    type: typeof SET_CODE_THEME\n    theme: any\n}\n\nexport type SettingsActionTypes = SetVisualTheme | SetCodeTheme;","import React, { useState, FunctionComponent } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  makeStyles,\n  ThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ColumnCoordinator from \"./components/ColumnCoordinator\";\n\nimport definedLanguages from \"./contents/LanguageDefs\";\nimport {\n  CssBaseline,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  FormHelperText\n} from \"@material-ui/core\";\nimport SettingsDialog from \"./components/SettingsDialog\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"./redux/RootReducer\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  appBarShiftRight: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  title: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  drawerHeaderRight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth,\n    marginRight: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  contentShiftRight: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  }\n}));\n\n//const allLanguages = [\"Java\", \"JavaScript\"];\nconst sections = [\"introduction\", \"helloworld\", \"constants\"];\n\ninterface LanguagesMap {\n  [language: string]: boolean;\n}\nconst allLanguagesDisabled: LanguagesMap = definedLanguages.reduce(\n  (acc, lang) => ({ ...acc, [lang.name]: false }),\n  {}\n);\n\nconst App: FunctionComponent = props => {\n  const classes = useStyles();\n  const theme = useSelector((state: RootState) => state.settings.visualTheme);\n\n  const [leftOpen, setLeftOpen] = useState(false);\n  const [rightOpen, setRightOpen] = useState(false);\n  const [settingsOpen, setSettingsOpen] = useState(false);\n\n  const [languages, setLanguages] = useState({...allLanguagesDisabled, [definedLanguages[0].name]: true});\n  const [section, setSection] = useState(sections[0]);\n\n  const handleDrawerOpen = () => {\n    setLeftOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setLeftOpen(false);\n  };\n\n  const handleRightDrawerOpen = () => {\n    setRightOpen(true);\n  };\n\n  const handleRightDrawerClose = () => {\n    setRightOpen(false);\n  };\n\n  const handleSettingsOpen = () => {\n    setSettingsOpen(true);\n  };\n\n  const handleSettingsClose = () => {\n    setSettingsOpen(false);\n  };\n\n  const setSectionClick = (\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\n  ) => {\n  };\n\n  const handleLanguageChange = (language: string) => (\n    event: React.ChangeEvent<HTMLInputElement>,\n    checked: boolean\n  ) => {\n    setLanguages({ ...languages, [language]: checked });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: leftOpen,\n            [classes.appBarShiftRight]: rightOpen\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, leftOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap className={classes.title}>\n              Title\n            </Typography>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open settings\"\n              edge=\"end\"\n              onClick={handleSettingsOpen}\n            >\n              <SettingsIcon />\n            </IconButton>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open right drawer\"\n              edge=\"end\"\n              onClick={handleRightDrawerOpen}\n              className={clsx(rightOpen && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={leftOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {sections.map((text, index) => (\n              <ListItem button key={text} onClick={setSectionClick}>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: leftOpen,\n            [classes.contentShiftRight]: rightOpen\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <ColumnCoordinator\n            languages={definedLanguages.filter(\n              language => languages[language.name]\n            )}\n          />\n        </main>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"right\"\n          open={rightOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n        >\n          <div className={classes.drawerHeaderRight}>\n            <IconButton onClick={handleRightDrawerClose}>\n              {theme.direction === \"rtl\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Choose a language</FormLabel>\n            <FormGroup>\n              {Object.entries(languages).map(([language, state]) => (\n                <FormControlLabel\n                  key={language}\n                  control={\n                    <Checkbox\n                      onChange={handleLanguageChange(language)}\n                      value={language}\n                      checked={state}\n                    />\n                  }\n                  label={language}\n                />\n              ))}\n            </FormGroup>\n            <FormHelperText></FormHelperText>\n          </FormControl>\n        </Drawer>\n        <SettingsDialog open={settingsOpen} onClose={handleSettingsClose} />\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SettingsActionTypes, SettingsState, SET_VISUAL_THEME, SET_CODE_THEME } from \"./types\";\nimport DarkTheme from \"../../styles/themes/DarkTheme\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nconst initialState: SettingsState = {\n    visualTheme: DarkTheme,\n    codeTheme: darcula\n}\n\nexport function settingsReducer(\n    state = initialState,\n    action: SettingsActionTypes\n) {\n    switch (action.type) {\n        case SET_VISUAL_THEME:\n            return {\n                ...state,\n                visualTheme: action.theme\n            }\n        case SET_CODE_THEME:\n            console.log(\"Setting theme code\")\n            return {\n                ...state,\n                codeTheme: action.theme\n            }\n        default:\n            return state;\n    }\n}","import { settingsReducer } from './settings/reducers'\nimport { combineReducers } from 'redux'\n\nconst RootReducer = combineReducers({\n  settings: settingsReducer\n})\n\nexport type RootState = ReturnType<typeof RootReducer>\nexport default RootReducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore} from \"redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport RootReducer from \"./redux/RootReducer\";\n\n\nconst store = createStore(RootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}